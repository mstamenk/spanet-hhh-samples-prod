      SUBROUTINE ML5_0_0_1_LOOP_CT_CALLS_1(P,NHEL,H,IC)
C     
C     Modules
C     
      USE ML5_0_0_1_POLYNOMIAL_CONSTANTS
C     
      IMPLICIT NONE
C     
C     CONSTANTS
C     
      INTEGER    NEXTERNAL
      PARAMETER (NEXTERNAL=5)
      INTEGER    NCOMB
      PARAMETER (NCOMB=4)
      INTEGER    NLOOPS, NLOOPGROUPS, NCTAMPS
      PARAMETER (NLOOPS=100, NLOOPGROUPS=100, NCTAMPS=14)
      INTEGER    NLOOPAMPS
      PARAMETER (NLOOPAMPS=114)
      INTEGER    NWAVEFUNCS,NLOOPWAVEFUNCS
      PARAMETER (NWAVEFUNCS=12,NLOOPWAVEFUNCS=216)
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
      REAL*16     MP__ZERO
      PARAMETER (MP__ZERO=0.0E0_16)
C     These are constants related to the split orders
      INTEGER    NSO, NSQUAREDSO, NAMPSO
      PARAMETER (NSO=1, NSQUAREDSO=1, NAMPSO=1)
C     
C     ARGUMENTS
C     
      REAL*8 P(0:3,NEXTERNAL)
      INTEGER NHEL(NEXTERNAL), IC(NEXTERNAL)
      INTEGER H
C     
C     LOCAL VARIABLES
C     
      INTEGER I,J,K
      COMPLEX*16 COEFS(MAXLWFSIZE,0:VERTEXMAXCOEFS-1,MAXLWFSIZE)

      LOGICAL DUMMYFALSE
      DATA DUMMYFALSE/.FALSE./
C     
C     GLOBAL VARIABLES
C     
      INCLUDE 'coupl.inc'
      INCLUDE 'mp_coupl.inc'

      INTEGER HELOFFSET
      INTEGER GOODHEL(NCOMB)
      LOGICAL GOODAMP(NSQUAREDSO,NLOOPGROUPS)
      COMMON/ML5_0_0_1_FILTERS/GOODAMP,GOODHEL,HELOFFSET

      LOGICAL CHECKPHASE
      LOGICAL HELDOUBLECHECKED
      COMMON/ML5_0_0_1_INIT/CHECKPHASE, HELDOUBLECHECKED

      INTEGER SQSO_TARGET
      COMMON/ML5_0_0_1_SOCHOICE/SQSO_TARGET

      LOGICAL UVCT_REQ_SO_DONE,MP_UVCT_REQ_SO_DONE,CT_REQ_SO_DONE
     $ ,MP_CT_REQ_SO_DONE,LOOP_REQ_SO_DONE,MP_LOOP_REQ_SO_DONE
     $ ,CTCALL_REQ_SO_DONE,FILTER_SO
      COMMON/ML5_0_0_1_SO_REQS/UVCT_REQ_SO_DONE,MP_UVCT_REQ_SO_DONE
     $ ,CT_REQ_SO_DONE,MP_CT_REQ_SO_DONE,LOOP_REQ_SO_DONE
     $ ,MP_LOOP_REQ_SO_DONE,CTCALL_REQ_SO_DONE,FILTER_SO

      INTEGER I_SO
      COMMON/ML5_0_0_1_I_SO/I_SO
      INTEGER I_LIB
      COMMON/ML5_0_0_1_I_LIB/I_LIB

      COMPLEX*16 W(20,NWAVEFUNCS)
      COMMON/ML5_0_0_1_W/W

      COMPLEX*16 WL(MAXLWFSIZE,0:LOOPMAXCOEFS-1,MAXLWFSIZE,
     $ -1:NLOOPWAVEFUNCS)
      COMPLEX*16 PL(0:3,-1:NLOOPWAVEFUNCS)
      COMMON/ML5_0_0_1_WL/WL,PL

      COMPLEX*16 AMPL(3,NLOOPAMPS)
      COMMON/ML5_0_0_1_AMPL/AMPL

C     
C     ----------
C     BEGIN CODE
C     ----------

C     The target squared split order contribution is already reached
C      if true.
      IF (FILTER_SO.AND.CTCALL_REQ_SO_DONE) THEN
        GOTO 1001
      ENDIF

C     CutTools call for loop # 1
      CALL ML5_0_0_1_LOOP_5(1,2,4,5,3,DCMPLX(MDL_MB),DCMPLX(MDL_MB)
     $ ,DCMPLX(MDL_MB),DCMPLX(MDL_MB),DCMPLX(MDL_MB),5,I_SO,1)
C     CutTools call for loop # 2
      CALL ML5_0_0_1_LOOP_5(1,2,5,4,3,DCMPLX(MDL_MB),DCMPLX(MDL_MB)
     $ ,DCMPLX(MDL_MB),DCMPLX(MDL_MB),DCMPLX(MDL_MB),5,I_SO,2)
C     CutTools call for loop # 3
      CALL ML5_0_0_1_LOOP_5(1,2,3,5,4,DCMPLX(MDL_MB),DCMPLX(MDL_MB)
     $ ,DCMPLX(MDL_MB),DCMPLX(MDL_MB),DCMPLX(MDL_MB),5,I_SO,3)
C     CutTools call for loop # 4
      CALL ML5_0_0_1_LOOP_5(1,2,5,3,4,DCMPLX(MDL_MB),DCMPLX(MDL_MB)
     $ ,DCMPLX(MDL_MB),DCMPLX(MDL_MB),DCMPLX(MDL_MB),5,I_SO,4)
C     CutTools call for loop # 5
      CALL ML5_0_0_1_LOOP_5(1,2,3,4,5,DCMPLX(MDL_MB),DCMPLX(MDL_MB)
     $ ,DCMPLX(MDL_MB),DCMPLX(MDL_MB),DCMPLX(MDL_MB),5,I_SO,5)
C     CutTools call for loop # 6
      CALL ML5_0_0_1_LOOP_5(1,2,4,3,5,DCMPLX(MDL_MB),DCMPLX(MDL_MB)
     $ ,DCMPLX(MDL_MB),DCMPLX(MDL_MB),DCMPLX(MDL_MB),5,I_SO,6)
C     CutTools call for loop # 7
      CALL ML5_0_0_1_LOOP_3(1,2,7,DCMPLX(MDL_MB),DCMPLX(MDL_MB)
     $ ,DCMPLX(MDL_MB),3,I_SO,7)
C     CutTools call for loop # 8
      CALL ML5_0_0_1_LOOP_4(1,2,5,6,DCMPLX(MDL_MB),DCMPLX(MDL_MB)
     $ ,DCMPLX(MDL_MB),DCMPLX(MDL_MB),4,I_SO,8)
C     CutTools call for loop # 9
      CALL ML5_0_0_1_LOOP_4(1,2,6,5,DCMPLX(MDL_MB),DCMPLX(MDL_MB)
     $ ,DCMPLX(MDL_MB),DCMPLX(MDL_MB),4,I_SO,9)
C     CutTools call for loop # 10
      CALL ML5_0_0_1_LOOP_3(1,2,9,DCMPLX(MDL_MB),DCMPLX(MDL_MB)
     $ ,DCMPLX(MDL_MB),3,I_SO,10)
C     CutTools call for loop # 11
      CALL ML5_0_0_1_LOOP_4(1,2,4,8,DCMPLX(MDL_MB),DCMPLX(MDL_MB)
     $ ,DCMPLX(MDL_MB),DCMPLX(MDL_MB),4,I_SO,11)
C     CutTools call for loop # 12
      CALL ML5_0_0_1_LOOP_4(1,2,8,4,DCMPLX(MDL_MB),DCMPLX(MDL_MB)
     $ ,DCMPLX(MDL_MB),DCMPLX(MDL_MB),4,I_SO,12)
C     CutTools call for loop # 13
      CALL ML5_0_0_1_LOOP_3(1,2,11,DCMPLX(MDL_MB),DCMPLX(MDL_MB)
     $ ,DCMPLX(MDL_MB),3,I_SO,13)
C     CutTools call for loop # 14
      CALL ML5_0_0_1_LOOP_4(1,2,10,3,DCMPLX(MDL_MB),DCMPLX(MDL_MB)
     $ ,DCMPLX(MDL_MB),DCMPLX(MDL_MB),4,I_SO,14)
C     CutTools call for loop # 15
      CALL ML5_0_0_1_LOOP_4(1,2,3,10,DCMPLX(MDL_MB),DCMPLX(MDL_MB)
     $ ,DCMPLX(MDL_MB),DCMPLX(MDL_MB),4,I_SO,15)
C     CutTools call for loop # 16
      CALL ML5_0_0_1_LOOP_3(1,2,12,DCMPLX(MDL_MB),DCMPLX(MDL_MB)
     $ ,DCMPLX(MDL_MB),3,I_SO,16)
C     CutTools call for loop # 17
      CALL ML5_0_0_1_LOOP_3(1,2,7,DCMPLX(MDL_MB),DCMPLX(MDL_MB)
     $ ,DCMPLX(MDL_MB),3,I_SO,17)
C     CutTools call for loop # 18
      CALL ML5_0_0_1_LOOP_4(1,2,5,6,DCMPLX(MDL_MB),DCMPLX(MDL_MB)
     $ ,DCMPLX(MDL_MB),DCMPLX(MDL_MB),4,I_SO,18)
C     CutTools call for loop # 19
      CALL ML5_0_0_1_LOOP_4(1,5,2,6,DCMPLX(MDL_MB),DCMPLX(MDL_MB)
     $ ,DCMPLX(MDL_MB),DCMPLX(MDL_MB),4,I_SO,19)
C     CutTools call for loop # 20
      CALL ML5_0_0_1_LOOP_4(1,2,6,5,DCMPLX(MDL_MB),DCMPLX(MDL_MB)
     $ ,DCMPLX(MDL_MB),DCMPLX(MDL_MB),4,I_SO,20)
C     CutTools call for loop # 21
      CALL ML5_0_0_1_LOOP_4(1,5,2,6,DCMPLX(MDL_MB),DCMPLX(MDL_MB)
     $ ,DCMPLX(MDL_MB),DCMPLX(MDL_MB),4,I_SO,21)
C     CutTools call for loop # 22
      CALL ML5_0_0_1_LOOP_3(1,2,9,DCMPLX(MDL_MB),DCMPLX(MDL_MB)
     $ ,DCMPLX(MDL_MB),3,I_SO,22)
C     CutTools call for loop # 23
      CALL ML5_0_0_1_LOOP_4(1,2,4,8,DCMPLX(MDL_MB),DCMPLX(MDL_MB)
     $ ,DCMPLX(MDL_MB),DCMPLX(MDL_MB),4,I_SO,23)
C     CutTools call for loop # 24
      CALL ML5_0_0_1_LOOP_4(1,4,2,8,DCMPLX(MDL_MB),DCMPLX(MDL_MB)
     $ ,DCMPLX(MDL_MB),DCMPLX(MDL_MB),4,I_SO,24)
C     CutTools call for loop # 25
      CALL ML5_0_0_1_LOOP_4(1,2,8,4,DCMPLX(MDL_MB),DCMPLX(MDL_MB)
     $ ,DCMPLX(MDL_MB),DCMPLX(MDL_MB),4,I_SO,25)
C     CutTools call for loop # 26
      CALL ML5_0_0_1_LOOP_4(1,4,2,8,DCMPLX(MDL_MB),DCMPLX(MDL_MB)
     $ ,DCMPLX(MDL_MB),DCMPLX(MDL_MB),4,I_SO,26)
C     CutTools call for loop # 27
      CALL ML5_0_0_1_LOOP_5(1,2,5,4,3,DCMPLX(MDL_MB),DCMPLX(MDL_MB)
     $ ,DCMPLX(MDL_MB),DCMPLX(MDL_MB),DCMPLX(MDL_MB),5,I_SO,27)
C     CutTools call for loop # 28
      CALL ML5_0_0_1_LOOP_5(1,2,4,5,3,DCMPLX(MDL_MB),DCMPLX(MDL_MB)
     $ ,DCMPLX(MDL_MB),DCMPLX(MDL_MB),DCMPLX(MDL_MB),5,I_SO,28)
C     CutTools call for loop # 29
      CALL ML5_0_0_1_LOOP_5(1,3,2,5,4,DCMPLX(MDL_MB),DCMPLX(MDL_MB)
     $ ,DCMPLX(MDL_MB),DCMPLX(MDL_MB),DCMPLX(MDL_MB),5,I_SO,29)
C     CutTools call for loop # 30
      CALL ML5_0_0_1_LOOP_5(1,3,5,2,4,DCMPLX(MDL_MB),DCMPLX(MDL_MB)
     $ ,DCMPLX(MDL_MB),DCMPLX(MDL_MB),DCMPLX(MDL_MB),5,I_SO,30)
C     CutTools call for loop # 31
      CALL ML5_0_0_1_LOOP_5(1,3,2,4,5,DCMPLX(MDL_MB),DCMPLX(MDL_MB)
     $ ,DCMPLX(MDL_MB),DCMPLX(MDL_MB),DCMPLX(MDL_MB),5,I_SO,31)
C     CutTools call for loop # 32
      CALL ML5_0_0_1_LOOP_5(1,3,4,2,5,DCMPLX(MDL_MB),DCMPLX(MDL_MB)
     $ ,DCMPLX(MDL_MB),DCMPLX(MDL_MB),DCMPLX(MDL_MB),5,I_SO,32)
C     CutTools call for loop # 33
      CALL ML5_0_0_1_LOOP_4(1,2,10,3,DCMPLX(MDL_MB),DCMPLX(MDL_MB)
     $ ,DCMPLX(MDL_MB),DCMPLX(MDL_MB),4,I_SO,33)
C     CutTools call for loop # 34
      CALL ML5_0_0_1_LOOP_4(1,3,2,10,DCMPLX(MDL_MB),DCMPLX(MDL_MB)
     $ ,DCMPLX(MDL_MB),DCMPLX(MDL_MB),4,I_SO,34)
C     CutTools call for loop # 35
      CALL ML5_0_0_1_LOOP_3(1,2,11,DCMPLX(MDL_MB),DCMPLX(MDL_MB)
     $ ,DCMPLX(MDL_MB),3,I_SO,35)
C     CutTools call for loop # 36
      CALL ML5_0_0_1_LOOP_4(1,2,3,10,DCMPLX(MDL_MB),DCMPLX(MDL_MB)
     $ ,DCMPLX(MDL_MB),DCMPLX(MDL_MB),4,I_SO,36)
C     CutTools call for loop # 37
      CALL ML5_0_0_1_LOOP_4(1,3,2,10,DCMPLX(MDL_MB),DCMPLX(MDL_MB)
     $ ,DCMPLX(MDL_MB),DCMPLX(MDL_MB),4,I_SO,37)
C     CutTools call for loop # 38
      CALL ML5_0_0_1_LOOP_5(1,2,5,3,4,DCMPLX(MDL_MB),DCMPLX(MDL_MB)
     $ ,DCMPLX(MDL_MB),DCMPLX(MDL_MB),DCMPLX(MDL_MB),5,I_SO,38)
C     CutTools call for loop # 39
      CALL ML5_0_0_1_LOOP_5(1,2,3,5,4,DCMPLX(MDL_MB),DCMPLX(MDL_MB)
     $ ,DCMPLX(MDL_MB),DCMPLX(MDL_MB),DCMPLX(MDL_MB),5,I_SO,39)
C     CutTools call for loop # 40
      CALL ML5_0_0_1_LOOP_5(1,3,5,2,4,DCMPLX(MDL_MB),DCMPLX(MDL_MB)
     $ ,DCMPLX(MDL_MB),DCMPLX(MDL_MB),DCMPLX(MDL_MB),5,I_SO,40)
C     CutTools call for loop # 41
      CALL ML5_0_0_1_LOOP_5(1,3,2,5,4,DCMPLX(MDL_MB),DCMPLX(MDL_MB)
     $ ,DCMPLX(MDL_MB),DCMPLX(MDL_MB),DCMPLX(MDL_MB),5,I_SO,41)
C     CutTools call for loop # 42
      CALL ML5_0_0_1_LOOP_5(1,4,2,3,5,DCMPLX(MDL_MB),DCMPLX(MDL_MB)
     $ ,DCMPLX(MDL_MB),DCMPLX(MDL_MB),DCMPLX(MDL_MB),5,I_SO,42)
C     CutTools call for loop # 43
      CALL ML5_0_0_1_LOOP_5(1,4,3,2,5,DCMPLX(MDL_MB),DCMPLX(MDL_MB)
     $ ,DCMPLX(MDL_MB),DCMPLX(MDL_MB),DCMPLX(MDL_MB),5,I_SO,43)
C     CutTools call for loop # 44
      CALL ML5_0_0_1_LOOP_5(1,2,4,3,5,DCMPLX(MDL_MB),DCMPLX(MDL_MB)
     $ ,DCMPLX(MDL_MB),DCMPLX(MDL_MB),DCMPLX(MDL_MB),5,I_SO,44)
C     CutTools call for loop # 45
      CALL ML5_0_0_1_LOOP_5(1,2,3,4,5,DCMPLX(MDL_MB),DCMPLX(MDL_MB)
     $ ,DCMPLX(MDL_MB),DCMPLX(MDL_MB),DCMPLX(MDL_MB),5,I_SO,45)
C     CutTools call for loop # 46
      CALL ML5_0_0_1_LOOP_5(1,3,4,2,5,DCMPLX(MDL_MB),DCMPLX(MDL_MB)
     $ ,DCMPLX(MDL_MB),DCMPLX(MDL_MB),DCMPLX(MDL_MB),5,I_SO,46)
C     CutTools call for loop # 47
      CALL ML5_0_0_1_LOOP_5(1,3,2,4,5,DCMPLX(MDL_MB),DCMPLX(MDL_MB)
     $ ,DCMPLX(MDL_MB),DCMPLX(MDL_MB),DCMPLX(MDL_MB),5,I_SO,47)
C     CutTools call for loop # 48
      CALL ML5_0_0_1_LOOP_5(1,4,3,2,5,DCMPLX(MDL_MB),DCMPLX(MDL_MB)
     $ ,DCMPLX(MDL_MB),DCMPLX(MDL_MB),DCMPLX(MDL_MB),5,I_SO,48)
C     CutTools call for loop # 49
      CALL ML5_0_0_1_LOOP_5(1,4,2,3,5,DCMPLX(MDL_MB),DCMPLX(MDL_MB)
     $ ,DCMPLX(MDL_MB),DCMPLX(MDL_MB),DCMPLX(MDL_MB),5,I_SO,49)
C     CutTools call for loop # 50
      CALL ML5_0_0_1_LOOP_3(1,2,12,DCMPLX(MDL_MB),DCMPLX(MDL_MB)
     $ ,DCMPLX(MDL_MB),3,I_SO,50)
C     CutTools call for loop # 51
      CALL ML5_0_0_1_LOOP_5(1,2,4,5,3,DCMPLX(MDL_MT),DCMPLX(MDL_MT)
     $ ,DCMPLX(MDL_MT),DCMPLX(MDL_MT),DCMPLX(MDL_MT),5,I_SO,51)
C     CutTools call for loop # 52
      CALL ML5_0_0_1_LOOP_5(1,2,5,4,3,DCMPLX(MDL_MT),DCMPLX(MDL_MT)
     $ ,DCMPLX(MDL_MT),DCMPLX(MDL_MT),DCMPLX(MDL_MT),5,I_SO,52)
C     CutTools call for loop # 53
      CALL ML5_0_0_1_LOOP_5(1,2,3,5,4,DCMPLX(MDL_MT),DCMPLX(MDL_MT)
     $ ,DCMPLX(MDL_MT),DCMPLX(MDL_MT),DCMPLX(MDL_MT),5,I_SO,53)
C     CutTools call for loop # 54
      CALL ML5_0_0_1_LOOP_5(1,2,5,3,4,DCMPLX(MDL_MT),DCMPLX(MDL_MT)
     $ ,DCMPLX(MDL_MT),DCMPLX(MDL_MT),DCMPLX(MDL_MT),5,I_SO,54)
C     CutTools call for loop # 55
      CALL ML5_0_0_1_LOOP_5(1,2,3,4,5,DCMPLX(MDL_MT),DCMPLX(MDL_MT)
     $ ,DCMPLX(MDL_MT),DCMPLX(MDL_MT),DCMPLX(MDL_MT),5,I_SO,55)
C     CutTools call for loop # 56
      CALL ML5_0_0_1_LOOP_5(1,2,4,3,5,DCMPLX(MDL_MT),DCMPLX(MDL_MT)
     $ ,DCMPLX(MDL_MT),DCMPLX(MDL_MT),DCMPLX(MDL_MT),5,I_SO,56)
C     CutTools call for loop # 57
      CALL ML5_0_0_1_LOOP_3(1,2,7,DCMPLX(MDL_MT),DCMPLX(MDL_MT)
     $ ,DCMPLX(MDL_MT),3,I_SO,57)
C     CutTools call for loop # 58
      CALL ML5_0_0_1_LOOP_4(1,2,5,6,DCMPLX(MDL_MT),DCMPLX(MDL_MT)
     $ ,DCMPLX(MDL_MT),DCMPLX(MDL_MT),4,I_SO,58)
C     CutTools call for loop # 59
      CALL ML5_0_0_1_LOOP_4(1,2,6,5,DCMPLX(MDL_MT),DCMPLX(MDL_MT)
     $ ,DCMPLX(MDL_MT),DCMPLX(MDL_MT),4,I_SO,59)
C     CutTools call for loop # 60
      CALL ML5_0_0_1_LOOP_3(1,2,9,DCMPLX(MDL_MT),DCMPLX(MDL_MT)
     $ ,DCMPLX(MDL_MT),3,I_SO,60)
C     CutTools call for loop # 61
      CALL ML5_0_0_1_LOOP_4(1,2,4,8,DCMPLX(MDL_MT),DCMPLX(MDL_MT)
     $ ,DCMPLX(MDL_MT),DCMPLX(MDL_MT),4,I_SO,61)
C     CutTools call for loop # 62
      CALL ML5_0_0_1_LOOP_4(1,2,8,4,DCMPLX(MDL_MT),DCMPLX(MDL_MT)
     $ ,DCMPLX(MDL_MT),DCMPLX(MDL_MT),4,I_SO,62)
C     CutTools call for loop # 63
      CALL ML5_0_0_1_LOOP_3(1,2,11,DCMPLX(MDL_MT),DCMPLX(MDL_MT)
     $ ,DCMPLX(MDL_MT),3,I_SO,63)
C     CutTools call for loop # 64
      CALL ML5_0_0_1_LOOP_4(1,2,10,3,DCMPLX(MDL_MT),DCMPLX(MDL_MT)
     $ ,DCMPLX(MDL_MT),DCMPLX(MDL_MT),4,I_SO,64)
C     CutTools call for loop # 65
      CALL ML5_0_0_1_LOOP_4(1,2,3,10,DCMPLX(MDL_MT),DCMPLX(MDL_MT)
     $ ,DCMPLX(MDL_MT),DCMPLX(MDL_MT),4,I_SO,65)
C     CutTools call for loop # 66
      CALL ML5_0_0_1_LOOP_3(1,2,12,DCMPLX(MDL_MT),DCMPLX(MDL_MT)
     $ ,DCMPLX(MDL_MT),3,I_SO,66)
C     CutTools call for loop # 67
      CALL ML5_0_0_1_LOOP_3(1,2,7,DCMPLX(MDL_MT),DCMPLX(MDL_MT)
     $ ,DCMPLX(MDL_MT),3,I_SO,67)
C     CutTools call for loop # 68
      CALL ML5_0_0_1_LOOP_4(1,2,5,6,DCMPLX(MDL_MT),DCMPLX(MDL_MT)
     $ ,DCMPLX(MDL_MT),DCMPLX(MDL_MT),4,I_SO,68)
C     CutTools call for loop # 69
      CALL ML5_0_0_1_LOOP_4(1,5,2,6,DCMPLX(MDL_MT),DCMPLX(MDL_MT)
     $ ,DCMPLX(MDL_MT),DCMPLX(MDL_MT),4,I_SO,69)
C     CutTools call for loop # 70
      CALL ML5_0_0_1_LOOP_4(1,2,6,5,DCMPLX(MDL_MT),DCMPLX(MDL_MT)
     $ ,DCMPLX(MDL_MT),DCMPLX(MDL_MT),4,I_SO,70)
C     CutTools call for loop # 71
      CALL ML5_0_0_1_LOOP_4(1,5,2,6,DCMPLX(MDL_MT),DCMPLX(MDL_MT)
     $ ,DCMPLX(MDL_MT),DCMPLX(MDL_MT),4,I_SO,71)
C     CutTools call for loop # 72
      CALL ML5_0_0_1_LOOP_3(1,2,9,DCMPLX(MDL_MT),DCMPLX(MDL_MT)
     $ ,DCMPLX(MDL_MT),3,I_SO,72)
C     CutTools call for loop # 73
      CALL ML5_0_0_1_LOOP_4(1,2,4,8,DCMPLX(MDL_MT),DCMPLX(MDL_MT)
     $ ,DCMPLX(MDL_MT),DCMPLX(MDL_MT),4,I_SO,73)
C     CutTools call for loop # 74
      CALL ML5_0_0_1_LOOP_4(1,4,2,8,DCMPLX(MDL_MT),DCMPLX(MDL_MT)
     $ ,DCMPLX(MDL_MT),DCMPLX(MDL_MT),4,I_SO,74)
C     CutTools call for loop # 75
      CALL ML5_0_0_1_LOOP_4(1,2,8,4,DCMPLX(MDL_MT),DCMPLX(MDL_MT)
     $ ,DCMPLX(MDL_MT),DCMPLX(MDL_MT),4,I_SO,75)
C     CutTools call for loop # 76
      CALL ML5_0_0_1_LOOP_4(1,4,2,8,DCMPLX(MDL_MT),DCMPLX(MDL_MT)
     $ ,DCMPLX(MDL_MT),DCMPLX(MDL_MT),4,I_SO,76)
C     CutTools call for loop # 77
      CALL ML5_0_0_1_LOOP_5(1,2,5,4,3,DCMPLX(MDL_MT),DCMPLX(MDL_MT)
     $ ,DCMPLX(MDL_MT),DCMPLX(MDL_MT),DCMPLX(MDL_MT),5,I_SO,77)
C     CutTools call for loop # 78
      CALL ML5_0_0_1_LOOP_5(1,2,4,5,3,DCMPLX(MDL_MT),DCMPLX(MDL_MT)
     $ ,DCMPLX(MDL_MT),DCMPLX(MDL_MT),DCMPLX(MDL_MT),5,I_SO,78)
C     CutTools call for loop # 79
      CALL ML5_0_0_1_LOOP_5(1,3,2,5,4,DCMPLX(MDL_MT),DCMPLX(MDL_MT)
     $ ,DCMPLX(MDL_MT),DCMPLX(MDL_MT),DCMPLX(MDL_MT),5,I_SO,79)
C     CutTools call for loop # 80
      CALL ML5_0_0_1_LOOP_5(1,3,5,2,4,DCMPLX(MDL_MT),DCMPLX(MDL_MT)
     $ ,DCMPLX(MDL_MT),DCMPLX(MDL_MT),DCMPLX(MDL_MT),5,I_SO,80)
C     CutTools call for loop # 81
      CALL ML5_0_0_1_LOOP_5(1,3,2,4,5,DCMPLX(MDL_MT),DCMPLX(MDL_MT)
     $ ,DCMPLX(MDL_MT),DCMPLX(MDL_MT),DCMPLX(MDL_MT),5,I_SO,81)
C     CutTools call for loop # 82
      CALL ML5_0_0_1_LOOP_5(1,3,4,2,5,DCMPLX(MDL_MT),DCMPLX(MDL_MT)
     $ ,DCMPLX(MDL_MT),DCMPLX(MDL_MT),DCMPLX(MDL_MT),5,I_SO,82)
C     CutTools call for loop # 83
      CALL ML5_0_0_1_LOOP_4(1,2,10,3,DCMPLX(MDL_MT),DCMPLX(MDL_MT)
     $ ,DCMPLX(MDL_MT),DCMPLX(MDL_MT),4,I_SO,83)
C     CutTools call for loop # 84
      CALL ML5_0_0_1_LOOP_4(1,3,2,10,DCMPLX(MDL_MT),DCMPLX(MDL_MT)
     $ ,DCMPLX(MDL_MT),DCMPLX(MDL_MT),4,I_SO,84)
C     CutTools call for loop # 85
      CALL ML5_0_0_1_LOOP_3(1,2,11,DCMPLX(MDL_MT),DCMPLX(MDL_MT)
     $ ,DCMPLX(MDL_MT),3,I_SO,85)
C     CutTools call for loop # 86
      CALL ML5_0_0_1_LOOP_4(1,2,3,10,DCMPLX(MDL_MT),DCMPLX(MDL_MT)
     $ ,DCMPLX(MDL_MT),DCMPLX(MDL_MT),4,I_SO,86)
C     CutTools call for loop # 87
      CALL ML5_0_0_1_LOOP_4(1,3,2,10,DCMPLX(MDL_MT),DCMPLX(MDL_MT)
     $ ,DCMPLX(MDL_MT),DCMPLX(MDL_MT),4,I_SO,87)
C     CutTools call for loop # 88
      CALL ML5_0_0_1_LOOP_5(1,2,5,3,4,DCMPLX(MDL_MT),DCMPLX(MDL_MT)
     $ ,DCMPLX(MDL_MT),DCMPLX(MDL_MT),DCMPLX(MDL_MT),5,I_SO,88)
C     CutTools call for loop # 89
      CALL ML5_0_0_1_LOOP_5(1,2,3,5,4,DCMPLX(MDL_MT),DCMPLX(MDL_MT)
     $ ,DCMPLX(MDL_MT),DCMPLX(MDL_MT),DCMPLX(MDL_MT),5,I_SO,89)
C     CutTools call for loop # 90
      CALL ML5_0_0_1_LOOP_5(1,3,5,2,4,DCMPLX(MDL_MT),DCMPLX(MDL_MT)
     $ ,DCMPLX(MDL_MT),DCMPLX(MDL_MT),DCMPLX(MDL_MT),5,I_SO,90)
C     CutTools call for loop # 91
      CALL ML5_0_0_1_LOOP_5(1,3,2,5,4,DCMPLX(MDL_MT),DCMPLX(MDL_MT)
     $ ,DCMPLX(MDL_MT),DCMPLX(MDL_MT),DCMPLX(MDL_MT),5,I_SO,91)
C     CutTools call for loop # 92
      CALL ML5_0_0_1_LOOP_5(1,4,2,3,5,DCMPLX(MDL_MT),DCMPLX(MDL_MT)
     $ ,DCMPLX(MDL_MT),DCMPLX(MDL_MT),DCMPLX(MDL_MT),5,I_SO,92)
C     CutTools call for loop # 93
      CALL ML5_0_0_1_LOOP_5(1,4,3,2,5,DCMPLX(MDL_MT),DCMPLX(MDL_MT)
     $ ,DCMPLX(MDL_MT),DCMPLX(MDL_MT),DCMPLX(MDL_MT),5,I_SO,93)
C     CutTools call for loop # 94
      CALL ML5_0_0_1_LOOP_5(1,2,4,3,5,DCMPLX(MDL_MT),DCMPLX(MDL_MT)
     $ ,DCMPLX(MDL_MT),DCMPLX(MDL_MT),DCMPLX(MDL_MT),5,I_SO,94)
C     CutTools call for loop # 95
      CALL ML5_0_0_1_LOOP_5(1,2,3,4,5,DCMPLX(MDL_MT),DCMPLX(MDL_MT)
     $ ,DCMPLX(MDL_MT),DCMPLX(MDL_MT),DCMPLX(MDL_MT),5,I_SO,95)
C     CutTools call for loop # 96
      CALL ML5_0_0_1_LOOP_5(1,3,4,2,5,DCMPLX(MDL_MT),DCMPLX(MDL_MT)
     $ ,DCMPLX(MDL_MT),DCMPLX(MDL_MT),DCMPLX(MDL_MT),5,I_SO,96)
C     CutTools call for loop # 97
      CALL ML5_0_0_1_LOOP_5(1,3,2,4,5,DCMPLX(MDL_MT),DCMPLX(MDL_MT)
     $ ,DCMPLX(MDL_MT),DCMPLX(MDL_MT),DCMPLX(MDL_MT),5,I_SO,97)
C     CutTools call for loop # 98
      CALL ML5_0_0_1_LOOP_5(1,4,3,2,5,DCMPLX(MDL_MT),DCMPLX(MDL_MT)
     $ ,DCMPLX(MDL_MT),DCMPLX(MDL_MT),DCMPLX(MDL_MT),5,I_SO,98)
C     CutTools call for loop # 99
      CALL ML5_0_0_1_LOOP_5(1,4,2,3,5,DCMPLX(MDL_MT),DCMPLX(MDL_MT)
     $ ,DCMPLX(MDL_MT),DCMPLX(MDL_MT),DCMPLX(MDL_MT),5,I_SO,99)
C     CutTools call for loop # 100
      CALL ML5_0_0_1_LOOP_3(1,2,12,DCMPLX(MDL_MT),DCMPLX(MDL_MT)
     $ ,DCMPLX(MDL_MT),3,I_SO,100)

      GOTO 1001
 5000 CONTINUE
      CTCALL_REQ_SO_DONE=.TRUE.
 1001 CONTINUE
      END

